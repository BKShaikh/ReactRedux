[{"C:\\WEB PRACTICE\\Task1\\task\\src\\index.js":"1","C:\\WEB PRACTICE\\Task1\\task\\src\\reportWebVitals.js":"2","C:\\WEB PRACTICE\\Task1\\task\\src\\App.js":"3","C:\\WEB PRACTICE\\Task1\\task\\src\\PrivateRoute.js":"4","C:\\WEB PRACTICE\\Task1\\task\\src\\Login\\Login.js":"5","C:\\WEB PRACTICE\\Task1\\task\\src\\Dashboard\\DashBoard.js":"6","C:\\WEB PRACTICE\\Task1\\task\\src\\Members\\MemberView.js":"7","C:\\WEB PRACTICE\\Task1\\task\\src\\Members\\MemberList.js":"8","C:\\WEB PRACTICE\\Task1\\task\\src\\Home.js":"9","C:\\WEB PRACTICE\\Task1\\task\\src\\store.js":"10","C:\\WEB PRACTICE\\Task1\\task\\src\\Members\\MemberReducer.js":"11","C:\\WEB PRACTICE\\Task1\\task\\src\\Login\\UserReducer.js":"12","C:\\WEB PRACTICE\\Task1\\task\\src\\actionTypes.js":"13","C:\\WEB PRACTICE\\Task1\\task\\src\\Thunk\\LoginThunk.js":"14","C:\\WEB PRACTICE\\Task1\\task\\src\\actions.js":"15","C:\\WEB PRACTICE\\Task1\\task\\src\\selector.js":"16","C:\\WEB PRACTICE\\Task1\\task\\src\\Error404.js":"17","C:\\WEB PRACTICE\\Task1\\task\\src\\About.js":"18","C:\\WEB PRACTICE\\Task1\\task\\src\\Dashboard\\DashBoardWelcome.js":"19","C:\\WEB PRACTICE\\Task1\\task\\src\\Thunk\\MemberThunk.js":"20","C:\\WEB PRACTICE\\Task1\\task\\src\\MyRoute.js":"21"},{"size":883,"mtime":1612179347561,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":300,"mtime":1612520664123,"results":"25","hashOfConfig":"23"},{"size":806,"mtime":1612792555149,"results":"26","hashOfConfig":"23"},{"size":2435,"mtime":1612972645694,"results":"27","hashOfConfig":"23"},{"size":2360,"mtime":1613126048212,"results":"28","hashOfConfig":"23"},{"size":4129,"mtime":1612271955931,"results":"29","hashOfConfig":"23"},{"size":2600,"mtime":1613126318247,"results":"30","hashOfConfig":"23"},{"size":908,"mtime":1612442248953,"results":"31","hashOfConfig":"23"},{"size":982,"mtime":1612363420207,"results":"32","hashOfConfig":"23"},{"size":1668,"mtime":1612363413294,"results":"33","hashOfConfig":"23"},{"size":1182,"mtime":1612782492888,"results":"34","hashOfConfig":"23"},{"size":488,"mtime":1612270218818,"results":"35","hashOfConfig":"23"},{"size":800,"mtime":1613034133023,"results":"36","hashOfConfig":"23"},{"size":1284,"mtime":1612787793662,"results":"37","hashOfConfig":"23"},{"size":862,"mtime":1612247700861,"results":"38","hashOfConfig":"23"},{"size":241,"mtime":1612183565016,"results":"39","hashOfConfig":"23"},{"size":234,"mtime":1612188924750,"results":"40","hashOfConfig":"23"},{"size":265,"mtime":1612189039182,"results":"41","hashOfConfig":"23"},{"size":3833,"mtime":1612354485394,"results":"42","hashOfConfig":"23"},{"size":682,"mtime":1612724743977,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1u7wkgw",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"46"},"C:\\WEB PRACTICE\\Task1\\task\\src\\index.js",[],["96","97"],"C:\\WEB PRACTICE\\Task1\\task\\src\\reportWebVitals.js",[],"C:\\WEB PRACTICE\\Task1\\task\\src\\App.js",["98","99","100","101"],"import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport MyRoute from './MyRoute';\n\nfunction App() {\n  return (\n    <Router>\n      <MyRoute />\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\WEB PRACTICE\\Task1\\task\\src\\PrivateRoute.js",["102"],"import React, { useEffect } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { getUserAllowed } from './selector';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateRoute = (props) => {\r\n    //const condition = performValidationHere();  write some login with state management to check is user loged in or not\r\n    const condition = props.logingInUser.isRouteAllowed ? true : false;\r\n    return condition ? (<Route path={props.path} exact={props.exact} component={props.component} />) :\r\n        (<Redirect to=\"/login\" />)\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    logingInUser: getUserAllowed(state)\r\n});\r\n\r\nconst mapDispatchToProp = dispatch => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProp)(PrivateRoute);","C:\\WEB PRACTICE\\Task1\\task\\src\\Login\\Login.js",["103","104"],"C:\\WEB PRACTICE\\Task1\\task\\src\\Dashboard\\DashBoard.js",[],"C:\\WEB PRACTICE\\Task1\\task\\src\\Members\\MemberView.js",["105","106","107"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Input, Button, Checkbox, Spin } from 'antd';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    getMemberLoading,\r\n    singleMemberData\r\n} from \"../selector\";\r\nimport {\r\n    loadSingleMember,\r\n    UpdateSingleMember,\r\n    AddSingleMember\r\n} from \"../Thunk/MemberThunk\";\r\n\r\nconst MemberView = props => {\r\n    const [form] = Form.useForm();\r\n    const layout = {\r\n        labelCol: { span: 8 },\r\n        wrapperCol: { span: 8 },\r\n    };\r\n    const tailLayout = {\r\n        wrapperCol: { offset: 8, span: 16 },\r\n    };\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n        if (!addMemeber) {\r\n            props.onUpdateMember(props.match.params.id, values, props.history)\r\n        } else {\r\n            props.onAddMember(values, props.history)\r\n        }\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    const editable = props.match.params.slug === 'view' ? true : false;\r\n    const addMemeber = props.match.params.slug === 'add' ? true : false;\r\n    useEffect(() => {\r\n        if (!addMemeber) {\r\n            props.startLoadingMember(props.match.params.id, form)\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Spin\r\n            size=\"large\"\r\n            tip=\"Loading...\"\r\n            spinning={props.isProcessLoading}>\r\n            <Form key={props.match.params.id} form={form}\r\n                {...layout}\r\n                style={{\r\n                    padding: '30vh',\r\n                    alignItems: 'center'\r\n                }}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Form.Item\r\n                    label=\"Member Name\"\r\n                    name=\"memberName\"\r\n\r\n                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                >\r\n                    <Input disabled={editable} />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Age\"\r\n                    name=\"memberAge\"\r\n                    rules={[{ required: true, message: 'Please input your Age!' }]}\r\n                >\r\n                    <Input disabled={editable} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Address\"\r\n                    name=\"address\"\r\n                //rules={[{ required: true, message: 'Please input your username!' }]}\r\n                >\r\n                    <Input disabled={editable} />\r\n                    {/* value={props.membersData.createdAt === '' ? props.membersData.createdAt : ''} */}\r\n                </Form.Item>\r\n                {addMemeber ? null :\r\n                    <Form.Item\r\n                        label=\"Created On\"\r\n                        name=\"createdAt\"\r\n                        rules={[{ required: true, message: 'Please input your username!' }]}\r\n                    >\r\n                        <Input disabled/>\r\n\r\n                    </Form.Item>\r\n                }\r\n                {\r\n                    props.match.params.slug === 'view' ? null :\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                {props.match.params.slug === 'add' ? 'ADD' : 'UPDATE'}\r\n                            </Button>\r\n                        </Form.Item>\r\n                }\r\n            </Form>\r\n        </Spin>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    isProcessLoading: getMemberLoading(state),\r\n    membersData: singleMemberData(state),\r\n\r\n});\r\n\r\nconst mapDispatchToProp = dispatch => ({\r\n    startLoadingMember: (id, form) => dispatch(loadSingleMember(id, form)),\r\n    onUpdateMember: (memberId, form, history) => dispatch(UpdateSingleMember(memberId, form, history)),\r\n    onAddMember: (form, history) => dispatch(AddSingleMember(form, history)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProp)(MemberView);","C:\\WEB PRACTICE\\Task1\\task\\src\\Members\\MemberList.js",["108","109","110","111"],"C:\\WEB PRACTICE\\Task1\\task\\src\\Home.js",["112","113","114"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst Home = props => {\r\n    return (\r\n        <Layout>\r\n            <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n                <Menu theme=\"dark\" mode=\"horizontal\" >\r\n                    <Menu.Item key=\"1\">LOGIN\r\n                        <Link data-testid=\"loginButton\" exact to=\"/login\" />\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Header>\r\n            <Content style={{ padding: '0 50px', height: '100vh' , marginTop: 70 }}>\r\n                <div>\r\n                    <h1 style={{ textAlign: 'center' }}>Home</h1>\r\n                </div>\r\n            </Content>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nHome.propTypes = {\r\n\r\n};\r\n\r\nexport default Home;","C:\\WEB PRACTICE\\Task1\\task\\src\\store.js",["115"],"import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport users from './Login/UserReducer';\r\nimport { members, singleMember } from './Members/MemberReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\ndebugger\r\nconst reducers = { users, members };\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    stateReconciler: autoMergeLevel2,\r\n}\r\nconst rootReducers = combineReducers(reducers)\r\nconst persistedReducer = persistReducer(persistConfig, rootReducers);\r\n\r\n//const store = createStore(persistedReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()) ;\r\nconst store = createStore(persistedReducer, composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nexport default store;\r\n\r\n","C:\\WEB PRACTICE\\Task1\\task\\src\\Members\\MemberReducer.js",[],"C:\\WEB PRACTICE\\Task1\\task\\src\\Login\\UserReducer.js",[],"C:\\WEB PRACTICE\\Task1\\task\\src\\actionTypes.js",["116"],"export default {\r\n    USER_LOGIN: 'login',\r\n    USER_LOGOUT: 'logout',\r\n    LOAD_USER_PROGRESS: 'loadProgressUser',\r\n    LOAD_USER_SUCCESS: 'loadSuccessUser',\r\n    LOAD_USER_FAILURE: 'loadFailureUser',\r\n    MEMBER_ADD: 'memberAdd',\r\n    MEMBER_EDIT: 'memberEdit',\r\n    MEMBER_DELETE: 'memberDelete',\r\n    MEMBER_DETAIL_SUCCESS: 'memberView',\r\n    LOAD_MEMBER_PROGRESS: 'loadProgressMember',\r\n    LOAD_MEMBER_FAILURE: 'loadFailureMember',\r\n    LOAD_MEMBER_SUCCESS: 'loadSuccessMember'\r\n}\r\n","C:\\WEB PRACTICE\\Task1\\task\\src\\Thunk\\LoginThunk.js",["117"],"C:\\WEB PRACTICE\\Task1\\task\\src\\actions.js",[],"C:\\WEB PRACTICE\\Task1\\task\\src\\selector.js",["118","119"],"import { createSelector } from \"reselect\";\r\nimport { createStore } from \"redux\";\r\n\r\nexport const getUserState = state => state.users.data;\r\nexport const getUserAllowed = state => state.users;\r\nexport const getUserLoading = state => state.users.isProcessLoading;\r\n\r\nexport const getMemberState = state => state.members.list;\r\nexport const getMemberLoading = state => state.members.isProcessLoading;\r\n\r\n\r\nexport const singleMemberData = state => state.members.detail;\r\n// export const getSelectedMember = (memberId) => createSelector( // it takes variable number of arguments each of which is some sort of selector \r\n//     getMemberState,  // can pass as many selector we want\r\n//     (membersData) => membersData.filter(member => member.id === memberId),  // at last we pass a function who's return\r\n//     //value is the reutrn value of complete selector\r\n// );","C:\\WEB PRACTICE\\Task1\\task\\src\\Error404.js",[],"C:\\WEB PRACTICE\\Task1\\task\\src\\About.js",[],"C:\\WEB PRACTICE\\Task1\\task\\src\\Dashboard\\DashBoardWelcome.js",[],"C:\\WEB PRACTICE\\Task1\\task\\src\\Thunk\\MemberThunk.js",["120","121","122"],"import {\r\n    memberAdd,\r\n    memberEdit,\r\n    memberDelete,\r\n    addMemberDetail,\r\n    loadMemberDetail,\r\n    loadMemberInProgress,\r\n    loadMemberInFailure,\r\n    updateMemberDetail,\r\n    loadMemberInSuccess,\r\n    deleteMemberInSuccess\r\n} from \"../actions\";\r\n\r\nconst URI = \"http://localhost:8080/\";\r\n\r\nexport const displayAlert = text => () => {\r\n    alert(text)\r\n}\r\n\r\nexport const loadMembers = () => async (dispatch, getState) => {\r\n    try {\r\n        debugger\r\n        dispatch(loadMemberInProgress());\r\n        const response = await fetch(URI + \"members\");\r\n        const members = await response.json();\r\n        dispatch(loadMemberInSuccess(members));\r\n    } catch (e) {\r\n        debugger\r\n        dispatch(loadMemberInFailure());\r\n        dispatch(displayAlert(e));\r\n    }\r\n}\r\n\r\nexport const deleteMember = (id) => async (dispatch, getState) => {\r\n    try {\r\n        debugger\r\n        dispatch(loadMemberInProgress());\r\n        const response = await fetch(URI + \"members/\" + id, {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            method: 'delete',\r\n        });\r\n        const members = await response.json();\r\n        dispatch(deleteMemberInSuccess(members.id));\r\n        dispatch(displayAlert(\"member -> \" + members.memberName));\r\n    } catch (e) {\r\n        debugger\r\n        dispatch(loadMemberInFailure());\r\n        dispatch(displayAlert(e));\r\n    }\r\n}\r\n\r\nexport const loadSingleMember = (id, form) => async (dispatch, getState) => {\r\n    try {\r\n        debugger\r\n        dispatch(loadMemberInProgress());\r\n        const response = await fetch(URI + \"members/\" + id);\r\n        const members = await response.json();\r\n        dispatch(loadMemberDetail(members));\r\n\r\n        form.setFieldsValue({\r\n            memberName: members.memberName,\r\n            createdAt: new Date(members.createdAt).toLocaleDateString(),\r\n            memberAge: members.memberAge,\r\n            address: members.address\r\n        })\r\n    } catch (e) {\r\n        debugger\r\n        dispatch(loadMemberInFailure());\r\n        dispatch(displayAlert(e));\r\n    }\r\n}\r\n\r\nexport const UpdateSingleMember = (memberId, memberObj, history) => async (dispatch, getState) => {\r\n    try {\r\n        debugger\r\n        dispatch(loadMemberInProgress());\r\n        const body = JSON.stringify({\r\n            member: {\r\n                memberName: memberObj.memberName,\r\n                memberAge: memberObj.memberAge,\r\n                address: memberObj.address,\r\n            }\r\n        });\r\n        const response = await fetch(URI + \"members/\" + memberId, {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            method: 'post',\r\n            body,\r\n        });\r\n        const members = await response.json();\r\n        dispatch(updateMemberDetail(members));\r\n    } catch (e) {\r\n        debugger\r\n        dispatch(loadMemberInFailure());\r\n        dispatch(displayAlert(e));\r\n    }\r\n}\r\n\r\nexport const AddSingleMember = (memberObj, history) => async (dispatch, getState) => {\r\n    try {\r\n        debugger\r\n        dispatch(loadMemberInProgress());\r\n        const body = JSON.stringify({\r\n            member: {\r\n                memberName: memberObj.memberName,\r\n                memberAge: memberObj.memberAge,\r\n                address: memberObj.address,\r\n            }\r\n        });\r\n        const response = await fetch(URI + \"members\", {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            method: 'post',\r\n            body,\r\n        });\r\n        const members = await response.json();\r\n        dispatch(addMemberDetail(members));\r\n        history.push(\"../member/view/\" + members.id);\r\n    } catch (e) {\r\n        debugger\r\n        dispatch(loadMemberInFailure());\r\n        dispatch(displayAlert(e));\r\n    }\r\n}","C:\\WEB PRACTICE\\Task1\\task\\src\\MyRoute.js",["123","124"],"import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport PrivateRoute from './PrivateRoute';\r\nimport Login from \"./Login/Login\";\r\nimport Home from './Home';\r\nimport Dashboard from './Dashboard/DashBoard';\r\nimport Error404 from \"./Error404\";\r\n\r\nconst MyRoute = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/login\" component={Login} />\r\n            <PrivateRoute path=\"/dashboard\" component={Dashboard}  ></PrivateRoute>\r\n            <Route path=\"/\" exact={true} component={Home} />\r\n            <Route path='*' component={Error404} />\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default MyRoute;\r\n\r\n\r\n",{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":1,"column":8,"nodeType":"131","messageId":"132","endLine":1,"endColumn":12},{"ruleId":"129","severity":1,"message":"133","line":3,"column":35,"nodeType":"131","messageId":"132","endLine":3,"endColumn":40},{"ruleId":"129","severity":1,"message":"134","line":3,"column":42,"nodeType":"131","messageId":"132","endLine":3,"endColumn":48},{"ruleId":"129","severity":1,"message":"135","line":3,"column":50,"nodeType":"131","messageId":"132","endLine":3,"endColumn":58},{"ruleId":"129","severity":1,"message":"136","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"136","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"137","line":2,"column":31,"nodeType":"131","messageId":"132","endLine":2,"endColumn":39},{"ruleId":"129","severity":1,"message":"138","line":2,"column":8,"nodeType":"131","messageId":"132","endLine":2,"endColumn":17},{"ruleId":"129","severity":1,"message":"137","line":3,"column":31,"nodeType":"131","messageId":"132","endLine":3,"endColumn":39},{"ruleId":"139","severity":1,"message":"140","line":42,"column":8,"nodeType":"141","endLine":42,"endColumn":10,"suggestions":"142"},{"ruleId":"129","severity":1,"message":"138","line":2,"column":8,"nodeType":"131","messageId":"132","endLine":2,"endColumn":17},{"ruleId":"139","severity":1,"message":"143","line":18,"column":8,"nodeType":"141","endLine":18,"endColumn":10,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":49,"column":29,"nodeType":"147","messageId":"148","endLine":49,"endColumn":31},{"ruleId":"129","severity":1,"message":"149","line":57,"column":11,"nodeType":"131","messageId":"132","endLine":57,"endColumn":15},{"ruleId":"129","severity":1,"message":"138","line":2,"column":8,"nodeType":"131","messageId":"132","endLine":2,"endColumn":17},{"ruleId":"129","severity":1,"message":"150","line":4,"column":24,"nodeType":"131","messageId":"132","endLine":4,"endColumn":34},{"ruleId":"129","severity":1,"message":"151","line":6,"column":26,"nodeType":"131","messageId":"132","endLine":6,"endColumn":32},{"ruleId":"129","severity":1,"message":"152","line":6,"column":19,"nodeType":"131","messageId":"132","endLine":6,"endColumn":31},{"ruleId":"153","severity":1,"message":"154","line":1,"column":1,"nodeType":"155","endLine":14,"endColumn":2},{"ruleId":"129","severity":1,"message":"156","line":2,"column":5,"nodeType":"131","messageId":"132","endLine":2,"endColumn":14},{"ruleId":"129","severity":1,"message":"157","line":1,"column":10,"nodeType":"131","messageId":"132","endLine":1,"endColumn":24},{"ruleId":"129","severity":1,"message":"158","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":21},{"ruleId":"129","severity":1,"message":"159","line":2,"column":5,"nodeType":"131","messageId":"132","endLine":2,"endColumn":14},{"ruleId":"129","severity":1,"message":"160","line":3,"column":5,"nodeType":"131","messageId":"132","endLine":3,"endColumn":15},{"ruleId":"129","severity":1,"message":"161","line":4,"column":5,"nodeType":"131","messageId":"132","endLine":4,"endColumn":17},{"ruleId":"129","severity":1,"message":"162","line":2,"column":27,"nodeType":"131","messageId":"132","endLine":2,"endColumn":33},{"ruleId":"129","severity":1,"message":"135","line":2,"column":50,"nodeType":"131","messageId":"132","endLine":2,"endColumn":58},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'useEffect' is defined but never used.","'Checkbox' is defined but never used.","'PropTypes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addMemeber', 'form', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["165"],"React Hook useEffect has a missing dependency: 'startLoadingMembers'. Either include it or remove the dependency array. If 'startLoadingMembers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["166"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'data' is assigned a value but never used.","'Breadcrumb' is defined but never used.","'Footer' is assigned a value but never used.","'singleMember' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'userLogin' is defined but never used.","'createSelector' is defined but never used.","'createStore' is defined but never used.","'memberAdd' is defined but never used.","'memberEdit' is defined but never used.","'memberDelete' is defined but never used.","'Router' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [addMemeber, form, props]",{"range":"171","text":"172"},"Update the dependencies array to be: [startLoadingMembers]",{"range":"173","text":"174"},[1274,1276],"[addMemeber, form, props]",[523,525],"[startLoadingMembers]"]